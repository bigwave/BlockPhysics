buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.8-0.934"
group = project.projectDir.name.toLowerCase()
archivesBaseName = "BlockPhysics" 
minecraft {
    version = "1.8-11.14.1.1337"
    runDir = "eclipse"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20141130"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
  compile group: 'junit', name: 'junit', version: '4.11'
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}
sourceSets.main{
    java {
        srcDirs 'java', 'apis', 'ASMHelper/java'
    }
    resources {
        srcDirs 'resources'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar,*.zip')
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'blargerist.cake.blockphysics.asm.ASMPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}


// variable substitution in java files
task processSourceMainJava(type:Copy) {
    inputs.property "vars", project.version + project.minecraft.version
    from('java')
    {
        include '**/ModInfo.java'
        include '**/package-info.java'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    into project.buildDir.getPath()+"/sources/java"
}

// correct task ordering
afterEvaluate { project ->
    sourceMainJava.finalizedBy(processSourceMainJava)
}

processResources {
    inputs.property "vars", project.version + project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}